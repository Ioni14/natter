POST http://localhost:8000/spaces
Content-Type: application/json
Accept: application/json
Authorization: Basic dG90bzpwYXNzd29yZA==

{
    "name": "space name",
    "owner": "space owner"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "status not 201");
  client.assert(response.body.name === 'space name', "bad name");
  client.assert(response.body.owner === 'space owner', "bad owner");
});
%}

###

POST http://localhost:8000/spaces
Content-Type: application/json
Accept: application/json
Authorization: Basic dG90bzpwYXNzd29yZA==

{
    "name": "space name",
    "owner": "space owner"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "status not 201");
  client.assert(response.body.violations[0].title === 'owner must match authenticated user', "status not 201");
});
%}

###

POST http://localhost:8000/spaces/1/messages
Content-Type: application/json
Accept: application/json
Authorization: Basic dG90bzpwYXNzd29yZA==

{
    "author": "message author",
    "message": "the message"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 201, "status not 201");
  client.assert(response.body.author === 'message author', "bad owner");
  client.assert(response.body.text === 'the message', "bad name");
});
%}

###

GET http://localhost:8000/spaces/1/messages/1
Accept: application/json
Authorization: Basic dG90bzpwYXNzd29yZA==

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "status not 200");
  client.assert(response.body.author === 'message author', "bad owner");
  client.assert(response.body.text === 'the message', "bad name");
});
%}

###

POST http://localhost:8000/spaces
Content-Type: application/json
Accept: application/json
Authorization: Basic dG90bzpwYXNzd29yZA==

{
    "name": "very long name very long name very long name very long name very long name very long name"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 400, "status not 400");
});
%}
